<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mobile.blue.launcher.dao.mapper.AppMessageMapper">
	<resultMap id="BaseResultMap" type="com.mobile.blue.launcher.model.AppMessage">
		<constructor>
			<idArg column="message_id" jdbcType="BIGINT" javaType="java.lang.Long" />
			<arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
			<arg column="ctime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
			<arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="message_type" jdbcType="TINYINT" javaType="java.lang.Byte" />
			<arg column="relation_id" jdbcType="BIGINT" javaType="java.lang.Long" />
			<arg column="relation_type" jdbcType="TINYINT" javaType="java.lang.Byte" />
			<arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
		</constructor>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		message_id, user_id, ctime, content, message_type, relation_id, relation_type,
		status
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.mobile.blue.launcher.model.Example.AppMessageExample">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from bjwg_message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="page != null">
			limit #{page.begin} , #{page.length}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from bjwg_message
		where message_id = #{messageId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from bjwg_message
		where message_id = #{messageId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.mobile.blue.launcher.model.AppMessage">
		insert into bjwg_message (message_id, user_id, ctime,
		content, message_type, relation_id,
		relation_type, status)
		values (#{messageId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
		#{ctime,jdbcType=TIMESTAMP},
		#{content,jdbcType=VARCHAR}, #{messageType,jdbcType=TINYINT}, #{relationId,jdbcType=BIGINT},
		#{relationType,jdbcType=TINYINT}, #{status,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="com.mobile.blue.launcher.model.AppMessage">
		insert into bjwg_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="messageId != null">
				message_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="ctime != null">
				ctime,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="messageType != null">
				message_type,
			</if>
			<if test="relationId != null">
				relation_id,
			</if>
			<if test="relationType != null">
				relation_type,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="messageId != null">
				#{messageId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="messageType != null">
				#{messageType,jdbcType=TINYINT},
			</if>
			<if test="relationId != null">
				#{relationId,jdbcType=BIGINT},
			</if>
			<if test="relationType != null">
				#{relationType,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.mobile.blue.launcher.model.Example.AppMessageExample"
		resultType="java.lang.Integer">
		select count(*) from bjwg_message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.mobile.blue.launcher.model.AppMessage">
		update bjwg_message
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				ctime = #{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="messageType != null">
				message_type = #{messageType,jdbcType=TINYINT},
			</if>
			<if test="relationId != null">
				relation_id = #{relationId,jdbcType=BIGINT},
			</if>
			<if test="relationType != null">
				relation_type = #{relationType,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
		</set>
		where message_id = #{messageId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mobile.blue.launcher.model.AppMessage">
		update bjwg_message
		set user_id = #{userId,jdbcType=BIGINT},
		ctime = #{ctime,jdbcType=TIMESTAMP},
		content = #{content,jdbcType=VARCHAR},
		message_type = #{messageType,jdbcType=TINYINT},
		relation_id = #{relationId,jdbcType=BIGINT},
		relation_type = #{relationType,jdbcType=TINYINT},
		status = #{status,jdbcType=TINYINT}
		where message_id = #{messageId,jdbcType=BIGINT}
	</update>
</mapper>