<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >

<generatorConfiguration>
	<!--导入属性配置 -->
	<!-- <properties resource="generator.properties"></properties> -->
	<!-- 数据库驱动包位置:注意是要配置自己本地的地址 -->
	<classPathEntry
		location="D:\work\connection_mysql\mysql-connector-java-5.1.22-bin.jar" />

	<context id="workone"><!-- 一个数据库对应一个id -->
		<!-- <plugin type="plugin.SelectByPagePlugin" /> -->
		<!-- 此处是将Example改名为Criteria 当然 想改成什么都行~ -->
		<plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"></plugin>  
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>  
		<plugin type="com.mobile.blue.util.MySqlPaginationPlugin"></plugin> 
		<!-- <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" 
			/> <plugin type="org.mybatis.generator.plugins.MapperConfigPlugin"> <property 
			name="fileName" value="GeneratedMapperConfig.xml" /> <property name="targetPackage" 
			value="com.cy.mybatis.mbg.util" /> <property name="targetProject" value="${targetProject}" 
			/> </plugin> -->

		<!-- suppressAllComments:**阻止**生成注释，默认为false suppressDate:**阻止**生成的注释包含时间戳，默认为false -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" />
			<property name="suppressDate" value="false" />
		</commentGenerator>
		<!-- 数据库链接URL、用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://120.25.102.41:3306/bjwg?useUnicode=true&amp;characterEncoding=utf-8"
			userId="root" password="Bjwg2015" />
		<javaTypeResolver><!-- 类型转换，目前不需要 -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>
		<!-- 生成实体类的包名和位置，这里配置将生成的实体类放在com.center.buuluu.model这个包下 -->
		<javaModelGenerator targetPackage="com.mobile.blue.launcher.model"
			targetProject="launcher">

			<property name="enableSubPackages" value="false" /><!-- 是否允许有子包 -->
			<!-- 是否对类CHAR类型的列的数据进行trim操作 -->
			<property name="trimStrings" value="true" />
			<property name="constructorBased" value="true" /><!-- 是否对model添加 
				构造函数 -->
			<!-- 建立的Model对象是否 不可改变 即生成的Model对象不会有 setter方法，只有构造方法 -->
			<!-- <property name="immutable" value="true" /> -->
			<!-- 给Model添加一个父类 -->
			<!-- <property name="rootClass" value="com.foo.louis.Hello"/> -->
		</javaModelGenerator>
		<!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
		<!-- 生成的SQL映射文件包名和位置，这里配置将生成的SQL映射文件放在com.center.buuluu.dao.xml这个包下 -->
		<sqlMapGenerator targetPackage="com.mobile.blue.launcher.dao.xml"
			targetProject="launcher">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		<!-- type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象 type="MIXEDMAPPER",生成基于注解的Java 
			Model 和相应的Mapper对象 type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口 -->
		<!-- 生成DAO的包名和位置，这里配置将生成的dao类放在com.center.buuluu.dao.mapper这个包下 -->
		<javaClientGenerator targetPackage="com.mobile.blue.launcher.dao.mapper"
			targetProject="launcher" type="XMLMAPPER">
			<property name="enableSubPackages" value="true" />
			<!-- 定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：private,public, default,protected -->
			<!-- <property name="exampleMethodVisibility" value="public" /> -->
			<property name="methodNameCalculator" value="true" /><!-- 方法名计数器 -->
			<!-- <property name="rootInterface" value="" /> --> <!-- 为生成的接口添加父接口 -->
		</javaClientGenerator>

		<!-- 要生成那些表(更改tableName和domainObjectName就可以) -->
		<!-- <table schema="???" tableName="???" > <columnOverride column="???" 
			property="???" /> -->
		<table tableName="bjwg_present_freinds" domainObjectName="AppPresentFreinds"
			enableCountByExample="true" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			selectByExampleQueryId="false">
			<!-- 当id需要自增长的时候使用 sqlStatement 的值可以为DB2，DB2_MF， -->
			<!-- Derby,HSQLDB,Informix,MySql,SqlServer,SYBASE,JDBC,identity -->
			<generatedKey column="id" sqlStatement="mysql" identity="true" />

			<!-- optional. 列的命名规则： MBG使用 <columnRenamingRule> 元素在计算列名的对应 名称之前，先对列名进行重命名， 
				作用：一般需要对BUSI_CLIENT_NO 前的BUSI_进行过滤 支持正在表达式 searchString 表示要被换掉的字符串 replaceString 
				则是要换成的字符串，默认情况下为空字符串，可选 -->
			<!-- <columnRenamingRule searchString="" replaceString="" /> -->

			<!-- optional.告诉 MBG 忽略某一列 column，需要忽略的列 delimitedColumnName:true ,匹配column的值和数据库列的名称 
				大小写完全匹配，false 忽略大小写匹配 是否限定表的列名，即固定表列在Model中的名称 -->
			<!-- <ignoreColumn column="PLAN_ID" delimitedColumnName="true" /> -->

			<!--optional.覆盖MBG对Model 的生成规则 column: 数据库的列名 javaType: 对应的Java数据类型的完全限定名 
				在必要的时候可以覆盖由JavaTypeResolver计算得到的java数据类型. For some databases, this is necessary 
				to handle "odd" database types (e.g. MySql's unsigned bigint type should 
				be mapped to java.lang.Object). jdbcType:该列的JDBC数据类型(INTEGER, DECIMAL, NUMERIC, 
				VARCHAR, etc.)，该列可以覆盖由JavaTypeResolver计算得到的Jdbc类型，对某些数据库而言，对于处理特定的JDBC 驱动癖好 
				很有必要(e.g. DB2's LONGVARCHAR type should be mapped to VARCHAR for iBATIS). 
				typeHandler: -->
			<!-- <columnOverride column="" javaType="" jdbcType="" typeHandler="" 
				delimitedColumnName="" /> -->
		</table>
	</context>
</generatorConfiguration>

